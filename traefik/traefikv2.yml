version: "3.2"

services:
  app:
    image: traefik:v2.8.1
    #env_file: /var/data/config/traefikv2/traefikv2.env
    # Note below that we use host mode to avoid source nat being applied to our ingress HTTP/HTTPS sessions
    # Without host mode, all inbound sessions would have the source IP of the swarm nodes, rather than the
    # original source IP, which would impact logging. If you don't care about this, you can expose ports the 
    # "minimal" way instead
    ports:
      - 80:80
      - 443:443
      - 5432:5432
#      - target: 80
#        published: 80
#        protocol: tcp
#        mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/data/ecom-networking/traefik:/etc/traefik
      - /var/data/ecom-networking/traefik/traefik.log:/traefik.log
      - /var/data/ecom-networking/traefik/acme.json:/acme.json
    networks:
      - traefik_public
    # Global mode makes an instance of traefik listen on _every_ node, so that regardless of which
    # node the request arrives on, it'll be forwarded to the correct backend service.
    deploy:
      mode: global
      labels:
        - "traefik.docker.network=traefik_public"
        - "traefik.http.routers.api.rule=Host(`traefik.nc.ecom.com`)"
        - "traefik.http.routers.api.entrypoints=https"
        - "traefik.http.routers.api.tls=true"
        - "traefik.http.routers.api.tls.certresolver=main"
        - "traefik.http.routers.api.service=api@internal"
        - "traefik.http.services.traefik.loadbalancer.server.port=8080"

      placement:
        constraints: [node.role == manager]

networks:
  traefik_public:
    external: true
